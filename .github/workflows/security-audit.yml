name: Security Audit

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main, develop ]
    paths:
      - 'package*.json'
      - '**/package*.json'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'package*.json'
      - '**/package*.json'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  npm-audit:
    name: NPM Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: 🔒 Run NPM Audit
        run: |
          npm audit --audit-level=moderate --json > npm-audit-report.json || true
          echo "## 🔒 NPM Security Audit Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Parse and display audit results
          if [ -f npm-audit-report.json ]; then
            vulnerabilities=$(cat npm-audit-report.json | jq '.metadata.vulnerabilities')
            critical=$(echo $vulnerabilities | jq '.critical // 0')
            high=$(echo $vulnerabilities | jq '.high // 0')
            moderate=$(echo $vulnerabilities | jq '.moderate // 0')
            low=$(echo $vulnerabilities | jq '.low // 0')
            
            echo "| Severity | Count |" >> $GITHUB_STEP_SUMMARY
            echo "|----------|-------|" >> $GITHUB_STEP_SUMMARY
            echo "| 🔴 Critical | $critical |" >> $GITHUB_STEP_SUMMARY
            echo "| 🟠 High | $high |" >> $GITHUB_STEP_SUMMARY
            echo "| 🟡 Moderate | $moderate |" >> $GITHUB_STEP_SUMMARY
            echo "| 🟢 Low | $low |" >> $GITHUB_STEP_SUMMARY
            
            # Fail if critical or high vulnerabilities found
            if [ "$critical" -gt 0 ] || [ "$high" -gt 0 ]; then
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "❌ **Action Required**: Critical or High severity vulnerabilities detected!" >> $GITHUB_STEP_SUMMARY
              exit 1
            fi
          fi

      - name: 📤 Upload Audit Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-report
          path: npm-audit-report.json
          retention-days: 30

  snyk-scan:
    name: Snyk Security Scan
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule'  # Don't run on schedule to save Snyk credits
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🛡️ Run Snyk Security Test
        uses: snyk/actions/node@master
        continue-on-error: true  # Don't fail the build, just report
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --file=package.json

      - name: 📤 Upload Snyk Results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: snyk.sarif

  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript', 'typescript' ]
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔬 Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-extended,security-and-quality
          config-file: ./.github/codeql-config.yml

      - name: 🏗️ Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"

  trivy-scan:
    name: Trivy Container Security Scan
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule'
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🐳 Build Docker Images
        run: |
          docker build -t photobooth-backend:scan -f apps/backend/Dockerfile .
          docker build -t photobooth-frontend:scan -f apps/frontend/Dockerfile .

      - name: 🔍 Run Trivy Vulnerability Scanner - Backend
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'photobooth-backend:scan'
          format: 'sarif'
          output: 'trivy-backend.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'

      - name: 🔍 Run Trivy Vulnerability Scanner - Frontend
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'photobooth-frontend:scan'
          format: 'sarif'
          output: 'trivy-frontend.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'

      - name: 📤 Upload Trivy Results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-backend.sarif'
          category: 'trivy-backend'

      - name: 📤 Upload Trivy Frontend Results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-frontend.sarif'
          category: 'trivy-frontend'

  license-check:
    name: License Compatibility Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 📜 Check Licenses
        run: |
          npx license-checker --production --summary --excludePrivatePackages > license-report.txt
          echo "## 📜 License Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          cat license-report.txt >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          
          # Check for problematic licenses
          if grep -E "(GPL|AGPL|LGPL)" license-report.txt; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "⚠️ **Warning**: Copyleft licenses detected. Please review for compatibility." >> $GITHUB_STEP_SUMMARY
          fi

      - name: 📤 Upload License Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: license-report
          path: license-report.txt
          retention-days: 30

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [npm-audit, codeql-analysis, license-check]
    if: always()
    steps:
      - name: 📊 Generate Security Summary
        run: |
          echo "## 🛡️ Security Scan Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ All security checks have been completed." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 Scan Results:" >> $GITHUB_STEP_SUMMARY
          echo "- NPM Audit: ${{ needs.npm-audit.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- CodeQL Analysis: ${{ needs.codeql-analysis.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- License Check: ${{ needs.license-check.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📝 Check the individual job outputs for detailed results." >> $GITHUB_STEP_SUMMARY